@using InventoryManagementMVC.Extensions
@using InventoryManagementMVC.Models.Purchasing;
@using RecipiesModelNS;


@model IEnumerable<PurchaseOrderHeaderViewModel>

@{
    Html.Kendo().Grid<PurchaseOrderHeaderViewModel>()
        .AddDefaultOptions()
        .Columns(columns =>
        {
            //columns.ForeignKey(p => p.PurchaseOrderHeaderId, (System.Collections.IEnumerable)ViewData["purchaseOrderHeaders"], "PurchaseOrderId", "PurchaseOrderId")
            //    .Title("Purchase Order").ClientFooterTemplate("Count: #=count#")
            //                    .ClientGroupFooterTemplate("Count: #=count#");
            //columns.ForeignKey(p => p.UnitMeasureId, (System.Collections.IEnumerable)ViewData["unitMeasures"], "UnitMeasureId", "Name")
            //    .Title("Unit").ClientFooterTemplate("Count: #=count#")
            //                    .ClientGroupFooterTemplate("Count: #=count#");
            //columns.ForeignKey(p => p.ProductId, (System.Collections.IEnumerable)ViewData["products"], "ProductId", "Name")
            //    .Title("Product").ClientFooterTemplate("Count: #=count#")
            //                    .ClientGroupFooterTemplate("Count: #=count#");
        })
        //.ReadOnlyOptions() 
        .DataSource(dataSource => dataSource
            .Ajax()
            .Read("Read", "PurchaseOrderHeader")
            .Create("Create", "PurchaseOrderHeader")
            .Update("Update", "PurchaseOrderHeader")
            .Destroy("Destroy", "PurchaseOrderHeader")
        )
        .Render();
}
