@using InventoryManagementMVC.Extensions
@using InventoryManagementMVC.Models;
@using RecipiesModelNS;


@model IEnumerable<PurchaseOrderDetailViewModel>

@{
    Html.Kendo().Grid<PurchaseOrderDetailViewModel>()
        .Name("PurchaseOrderDetailViewModelGrid")
        .Columns(columns =>
        {
            //columns.ForeignKey(p => p.CategoryId, (System.Collections.IEnumerable) ViewData["categories"], "CategoryId", "Name")
            //    .Title("Category").ClientFooterTemplate("Count: #=count#")
            //                    .ClientGroupFooterTemplate("Count: #=count#");
            //columns.ForeignKey(p => p.UnitMeasureId, (System.Collections.IEnumerable) ViewData["unitMeasures"], "UnitMeasureId", "Name")
            //    .Title("Unit").ClientFooterTemplate("Count: #=count#")
            //                    .ClientGroupFooterTemplate("Count: #=count#");
            //columns.ForeignKey(p => p.StoreId, (System.Collections.IEnumerable) ViewData["stores"], "StoreId", "Name")
            //    .Title("Store").ClientFooterTemplate("Count: #=count#")
            //                    .ClientGroupFooterTemplate("Count: #=count#");
        })
        .AddDefaultOptions()
        .DataSource(dataSource => dataSource
            .Ajax()
            .Model(model =>
            {
                //model.Field(p => p.CategoryId).DefaultValue(
                //    (ViewData["defaultCategory"] as ProductCategory) != null ? (ViewData["defaultCategory"] as ProductCategory).CategoryId : default(int?));
                //model.Field(p => p.UnitMeasureId).DefaultValue(
                //    (ViewData["defaultUnitMeasure"] as UnitMeasure) != null ? (ViewData["defaultUnitMeasure"] as UnitMeasure).UnitMeasureId : default(int?));
                //model.Field(p => p.StoreId).DefaultValue(
                //    (ViewData["defaultStore"] as Store) != null ? (ViewData["defaultStore"] as Store).StoreId : default(int?));
                //model.Field(p => p.Name).DefaultValue("[Enter a name]");
            })
            .Create("Create", "PurchaseOrderDetail")
            .Read("Read", "PurchaseOrderDetail")
            .Update("Update", "PurchaseOrderDetail")
            .Destroy("Destroy", "PurchaseOrderDetail")
        )
        .Render();
}
